{application,pollution,
             [{applications,[kernel,stdlib,elixir]},
              {description,"Construct streams of values by specifying composable generator functions.\nFor example list(tuple(like: {atom, string})) will generate a random length\nkeyword list with random keys and values. Constraints can be applied at\nall levels.\n"},
              {modules,['Elixir.Pollution','Elixir.Pollution.Generator',
                        'Elixir.Pollution.Generator.Atom',
                        'Elixir.Pollution.Generator.Choose',
                        'Elixir.Pollution.Generator.Float',
                        'Elixir.Pollution.Generator.Float.Limits',
                        'Elixir.Pollution.Generator.Int',
                        'Elixir.Pollution.Generator.List',
                        'Elixir.Pollution.Generator.Map',
                        'Elixir.Pollution.Generator.Seq',
                        'Elixir.Pollution.Generator.String',
                        'Elixir.Pollution.Generator.Struct',
                        'Elixir.Pollution.Generator.Tuple',
                        'Elixir.Pollution.Generator.Value',
                        'Elixir.Pollution.Shrinker',
                        'Elixir.Pollution.Shrinker.Params',
                        'Elixir.Pollution.State','Elixir.Pollution.Util',
                        'Elixir.Pollution.VG',
                        'Elixir.String.Chars.Pollution.State']},
              {registered,[]},
              {vsn,"0.9.2"}]}.
