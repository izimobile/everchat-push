%% coding: utf-8
%% script generated at {2018,10,12} {15,3,9}
{script,
    {"mongoose_push","0.1.0"},
    [{preLoaded,
         [erl_prim_loader,erl_tracer,erlang,erts_code_purger,
          erts_dirty_process_code_checker,erts_internal,
          erts_literal_area_collector,init,otp_ring0,prim_eval,prim_file,
          prim_inet,prim_zip,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-5.4.3.2/ebin","$ROOT/lib/stdlib-3.4.5/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-5.4.3.2/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_ddll,
          erl_distribution,erl_epmd,erl_reply,erl_signal_handler,erts_debug,
          gen_sctp,gen_tcp,gen_udp,global,global_group,global_search,group,
          group_history,hipe_unified_loader,inet,inet6_sctp,inet6_tcp,
          inet6_tcp_dist,inet6_udp,inet_config,inet_db,inet_dns,
          inet_gethost_native,inet_hosts,inet_parse,inet_res,inet_sctp,
          inet_tcp,inet_tcp_dist,inet_udp,kernel_config,local_tcp,local_udp,
          net,net_adm,net_kernel,os,pg2,ram_file,rpc,seq_trace,standard_error,
          user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-3.4.5/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,edlin_expand,
          epp,erl_abstract_code,erl_anno,erl_bits,erl_compile,
          erl_expand_records,erl_internal,erl_posix_msg,erl_pp,erl_scan,
          erl_tar,error_logger_file_h,error_logger_tty_h,escript,eval_bits,
          file_sorter,filelib,gb_sets,gb_trees,gen_fsm,gen_statem,io,io_lib,
          io_lib_format,io_lib_fread,io_lib_pretty,lib,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proplists,qlc,qlc_pt,
          queue,rand,random,re,sets,shell,shell_default,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,unicode_util,win32reg,zip]},
     {path,["$ROOT/lib/compiler-7.1.5.2/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bs,beam_bsm,beam_clean,beam_dead,
          beam_dict,beam_disasm,beam_except,beam_flatten,beam_jump,
          beam_listing,beam_opcodes,beam_peep,beam_receive,beam_record,
          beam_reorder,beam_split,beam_trim,beam_type,beam_utils,
          beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,cerl_sets,
          cerl_trees,compile,core_lib,core_lint,core_parse,core_pp,core_scan,
          erl_bifs,rec_env,sys_core_bsm,sys_core_dsetel,sys_core_fold,
          sys_core_fold_lists,sys_core_inline,sys_pre_attributes,v3_codegen,
          v3_core,v3_kernel,v3_kernel_pp,v3_life]},
     {path,["$ROOT/lib/elixir-1.6.4/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadBooleanError','Elixir.BadFunctionError',
          'Elixir.BadMapError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
          'Elixir.Calendar.ISO','Elixir.CaseClauseError','Elixir.Code',
          'Elixir.Code.Formatter','Elixir.Code.Identifier',
          'Elixir.Code.LoadError','Elixir.Collectable',
          'Elixir.Collectable.BitString','Elixir.Collectable.File.Stream',
          'Elixir.Collectable.HashDict','Elixir.Collectable.HashSet',
          'Elixir.Collectable.IO.Stream','Elixir.Collectable.List',
          'Elixir.Collectable.Map','Elixir.Collectable.MapSet',
          'Elixir.CompileError','Elixir.CondClauseError','Elixir.Date',
          'Elixir.Date.Range','Elixir.DateTime','Elixir.Dict',
          'Elixir.DynamicSupervisor','Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.Date.Range','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.MapSet',
          'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
          'Elixir.ErlangError','Elixir.Exception','Elixir.File',
          'Elixir.File.CopyError','Elixir.File.Error','Elixir.File.LinkError',
          'Elixir.File.Stat','Elixir.File.Stream','Elixir.Float',
          'Elixir.FunctionClauseError','Elixir.GenEvent',
          'Elixir.GenEvent.Stream','Elixir.GenServer','Elixir.HashDict',
          'Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
          'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Date.Range','Elixir.Inspect.DateTime',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Integer',
          'Elixir.Inspect.List','Elixir.Inspect.Map','Elixir.Inspect.MapSet',
          'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
          'Elixir.Inspect.PID','Elixir.Inspect.Port','Elixir.Inspect.Range',
          'Elixir.Inspect.Reference','Elixir.Inspect.Regex',
          'Elixir.Inspect.Stream','Elixir.Inspect.Time',
          'Elixir.Inspect.Tuple','Elixir.Inspect.Version',
          'Elixir.Inspect.Version.Requirement','Elixir.Integer',
          'Elixir.Kernel','Elixir.Kernel.CLI','Elixir.Kernel.ErrorHandler',
          'Elixir.Kernel.LexicalTracker','Elixir.Kernel.ParallelCompiler',
          'Elixir.Kernel.ParallelRequire','Elixir.Kernel.SpecialForms',
          'Elixir.Kernel.Typespec','Elixir.Kernel.Utils','Elixir.KeyError',
          'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
          'Elixir.List.Chars.Atom','Elixir.List.Chars.BitString',
          'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
          'Elixir.List.Chars.List','Elixir.Macro','Elixir.Macro.Env',
          'Elixir.Map','Elixir.MapSet','Elixir.MatchError','Elixir.Module',
          'Elixir.Module.LocalsTracker','Elixir.NaiveDateTime','Elixir.Node',
          'Elixir.OptionParser','Elixir.OptionParser.ParseError',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.Registry',
          'Elixir.Registry.Partition','Elixir.Registry.Supervisor',
          'Elixir.RuntimeError','Elixir.Set','Elixir.Stream',
          'Elixir.Stream.Reducers','Elixir.String','Elixir.String.Break',
          'Elixir.String.Casing','Elixir.String.Chars',
          'Elixir.String.Chars.Atom','Elixir.String.Chars.BitString',
          'Elixir.String.Chars.Date','Elixir.String.Chars.DateTime',
          'Elixir.String.Chars.Float','Elixir.String.Chars.Integer',
          'Elixir.String.Chars.List','Elixir.String.Chars.NaiveDateTime',
          'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
          'Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement',
          'Elixir.String.Normalizer','Elixir.String.Tokenizer',
          'Elixir.String.Unicode','Elixir.StringIO','Elixir.Supervisor',
          'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
          'Elixir.SyntaxError','Elixir.System','Elixir.SystemLimitError',
          'Elixir.Task','Elixir.Task.Supervised','Elixir.Task.Supervisor',
          'Elixir.Time','Elixir.TokenMissingError','Elixir.TryClauseError',
          'Elixir.Tuple','Elixir.URI','Elixir.UndefinedFunctionError',
          'Elixir.UnicodeConversionError','Elixir.Version',
          'Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Requirement','Elixir.WithClauseError',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_def,
          elixir_dispatch,elixir_env,elixir_erl,elixir_erl_clauses,
          elixir_erl_compiler,elixir_erl_for,elixir_erl_pass,elixir_erl_try,
          elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_overridable,elixir_parser,elixir_quote,
          elixir_rewrite,elixir_sup,elixir_tokenizer,elixir_utils]},
     {path,["$ROOT/lib/logger-1.6.4/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.Backends.Console','Elixir.Logger.Config',
          'Elixir.Logger.ErrorHandler','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher','Elixir.Logger.WatcherSupervisor']},
     {path,["$ROOT/lib/mix_docker-0.5.0/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.Docker.Build','Elixir.Mix.Tasks.Docker.Customize',
          'Elixir.Mix.Tasks.Docker.Init','Elixir.Mix.Tasks.Docker.Publish',
          'Elixir.Mix.Tasks.Docker.Release','Elixir.Mix.Tasks.Docker.Shipit',
          'Elixir.MixDocker']},
     {path,["$ROOT/lib/distillery-1.5.2/ebin"]},
     {primLoad,
         ['Elixir.Distillery.Cookies','Elixir.Distillery.IO',
          'Elixir.Mix.Releases.App','Elixir.Mix.Releases.Appup',
          'Elixir.Mix.Releases.Archiver','Elixir.Mix.Releases.Assembler',
          'Elixir.Mix.Releases.Config','Elixir.Mix.Releases.Config.LoadError',
          'Elixir.Mix.Releases.Environment','Elixir.Mix.Releases.Errors',
          'Elixir.Mix.Releases.Logger','Elixir.Mix.Releases.Overlays',
          'Elixir.Mix.Releases.Plugin','Elixir.Mix.Releases.Profile',
          'Elixir.Mix.Releases.Release','Elixir.Mix.Releases.Utils',
          'Elixir.Mix.Tasks.Release','Elixir.Mix.Tasks.Release.Clean',
          'Elixir.Mix.Tasks.Release.Init']},
     {path,["$ROOT/lib/poolboy-1.5.1/ebin"]},
     {primLoad,[poolboy,poolboy_sup,poolboy_worker]},
     {path,["$ROOT/lib/hpack-0.2.3/ebin"]},
     {primLoad,[hpack,hpack_index,hpack_integer,hpack_string,huffman]},
     {path,["$ROOT/lib/syntax_tools-2.1.4.1/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,erl_tidy,igor,merl,merl_transform,prettypr]},
     {path,["$ROOT/lib/goldrush-0.1.9/ebin"]},
     {primLoad,
         [glc,glc_code,glc_lib,glc_ops,glc_run,gr_app,gr_context,gr_counter,
          gr_counter_sup,gr_manager,gr_manager_sup,gr_param,gr_param_sup,
          gr_sup,gre]},
     {path,["$ROOT/lib/lager-3.5.2/ebin"]},
     {primLoad,
         [error_logger_lager_h,lager,lager_app,lager_backend_throttle,
          lager_common_test_backend,lager_config,lager_console_backend,
          lager_crash_log,lager_default_formatter,lager_file_backend,
          lager_format,lager_handler_watcher,lager_handler_watcher_sup,
          lager_manager_killer,lager_msg,lager_stdlib,lager_sup,
          lager_transform,lager_trunc_io,lager_util]},
     {path,["$ROOT/lib/asn1-5.0.5.1/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,["$ROOT/lib/crypto-4.2.2.2/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/public_key-1.5.2/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-8.2.6.2/ebin"]},
     {primLoad,
         [dtls,dtls_connection,dtls_connection_sup,dtls_handshake,dtls_record,
          dtls_socket,dtls_udp_listener,dtls_udp_sup,dtls_v1,inet6_tls_dist,
          inet_tls_dist,ssl,ssl_admin_sup,ssl_alert,ssl_app,ssl_certificate,
          ssl_cipher,ssl_config,ssl_connection,ssl_connection_sup,ssl_crl,
          ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dist_admin_sup,
          ssl_dist_connection_sup,ssl_dist_sup,ssl_handshake,
          ssl_listen_tracker_sup,ssl_manager,ssl_pem_cache,ssl_pkix_db,
          ssl_record,ssl_session,ssl_session_cache,ssl_session_cache_api,
          ssl_srp_primes,ssl_sup,ssl_tls_dist_proxy,ssl_v2,ssl_v3,tls,
          tls_connection,tls_connection_sup,tls_handshake,tls_record,
          tls_socket,tls_v1]},
     {path,["$ROOT/lib/chatterbox-0.4.1+build.296.ref6f223e4/ebin"]},
     {primLoad,
         [chatterbox,chatterbox_app,chatterbox_ranch_protocol,
          chatterbox_static_content_handler,chatterbox_static_stream,
          chatterbox_sup,h2_client,h2_connection,h2_frame,
          h2_frame_continuation,h2_frame_data,h2_frame_goaway,
          h2_frame_headers,h2_frame_ping,h2_frame_priority,
          h2_frame_push_promise,h2_frame_rst_stream,h2_frame_settings,
          h2_frame_window_update,h2_padding,h2_settings,h2_stream,
          h2_stream_set,sock]},
     {path,["$ROOT/lib/metrics-1.0.1/ebin"]},
     {primLoad,[metrics,metrics_dummy,metrics_exometer,metrics_folsom]},
     {path,["$ROOT/lib/ssl_verify_fun-1.1.1/ebin"]},
     {primLoad,
         [ssl_verify_fingerprint,ssl_verify_hostname,ssl_verify_pk,
          ssl_verify_util]},
     {path,["$ROOT/lib/certifi-2.0.0/ebin"]},
     {primLoad,[certifi,certifi_pt]},
     {path,["$ROOT/lib/mimerl-1.0.2/ebin"]},
     {primLoad,[mimerl]},
     {path,["$ROOT/lib/unicode_util_compat-0.3.1/ebin"]},
     {primLoad,[unicode_util_compat]},
     {path,["$ROOT/lib/idna-5.1.0/ebin"]},
     {primLoad,[idna,idna_ucs,punycode]},
     {path,["$ROOT/lib/hackney-1.10.1/ebin"]},
     {primLoad,
         [hackney,hackney_app,hackney_bstr,hackney_connect,hackney_cookie,
          hackney_date,hackney_headers,hackney_headers_new,hackney_http,
          hackney_http_connect,hackney_local_tcp,hackney_manager,
          hackney_multipart,hackney_pool,hackney_pool_handler,hackney_request,
          hackney_response,hackney_socks5,hackney_ssl,hackney_stream,
          hackney_sup,hackney_tcp,hackney_trace,hackney_url,hackney_util]},
     {path,["$ROOT/lib/httpoison-0.13.0/ebin"]},
     {primLoad,
         ['Elixir.HTTPoison','Elixir.HTTPoison.AsyncChunk',
          'Elixir.HTTPoison.AsyncEnd','Elixir.HTTPoison.AsyncHeaders',
          'Elixir.HTTPoison.AsyncRedirect','Elixir.HTTPoison.AsyncResponse',
          'Elixir.HTTPoison.AsyncStatus','Elixir.HTTPoison.Base',
          'Elixir.HTTPoison.Error','Elixir.HTTPoison.Response']},
     {path,["$ROOT/lib/pigeon-0.10.3/ebin"]},
     {primLoad,
         ['Elixir.Pigeon','Elixir.Pigeon.ADM','Elixir.Pigeon.ADM.Config',
          'Elixir.Pigeon.ADM.Notification','Elixir.Pigeon.ADMWorker',
          'Elixir.Pigeon.APNS','Elixir.Pigeon.APNS.Config',
          'Elixir.Pigeon.APNS.Notification','Elixir.Pigeon.APNSWorker',
          'Elixir.Pigeon.GCM','Elixir.Pigeon.GCM.Notification',
          'Elixir.Pigeon.GCM.NotificationResponse','Elixir.Pigeon.GCMWorker',
          'Elixir.Pigeon.GenericH2Worker','Elixir.Pigeon.H2',
          'Elixir.Pigeon.Notification']},
     {path,["$ROOT/lib/pobox-1.0.4/ebin"]},
     {primLoad,[pobox]},
     {path,["$ROOT/lib/bear-0.8.5/ebin"]},
     {primLoad,[bear]},
     {path,["$ROOT/lib/folsom-0.8.5/ebin"]},
     {primLoad,
         [folsom,folsom_ets,folsom_ewma,folsom_meter_timer_server,
          folsom_metrics,folsom_metrics_counter,folsom_metrics_duration,
          folsom_metrics_gauge,folsom_metrics_histogram,
          folsom_metrics_histogram_ets,folsom_metrics_history,
          folsom_metrics_meter,folsom_metrics_meter_reader,
          folsom_metrics_spiral,folsom_sample,folsom_sample_exdec,
          folsom_sample_none,folsom_sample_slide,folsom_sample_slide_server,
          folsom_sample_slide_sorted,folsom_sample_slide_sup,
          folsom_sample_slide_uniform,folsom_sample_uniform,folsom_sup,
          folsom_utils,folsom_vm_metrics]},
     {path,["$ROOT/lib/hut-1.2.0/ebin"]},
     {primLoad,[]},
     {path,["$ROOT/lib/exometer_core-2017-12-11/ebin"]},
     {primLoad,
         [exo_montest,exometer,exometer_admin,exometer_alias,exometer_cache,
          exometer_core_app,exometer_core_sup,exometer_cpu,exometer_duration,
          exometer_entry,exometer_folsom,exometer_folsom_monitor,
          exometer_function,exometer_global,exometer_histogram,exometer_igor,
          exometer_info,exometer_probe,exometer_proc,exometer_report,
          exometer_report_logger,exometer_report_logger_sup,
          exometer_report_tty,exometer_setup,exometer_shallowtree,
          exometer_slide,exometer_slot_slide,exometer_spiral,exometer_uniform,
          exometer_util]},
     {path,["$ROOT/lib/elixometer-1.3.0-dev/ebin"]},
     {primLoad,
         ['Elixir.Elixometer','Elixir.Elixometer.App',
          'Elixir.Elixometer.Config','Elixir.Elixometer.Supervisor',
          'Elixir.Elixometer.Timer','Elixir.Elixometer.Updater',
          'Elixir.Elixometer.Utils']},
     {path,["$ROOT/lib/mime-1.1.0/ebin"]},
     {primLoad,['Elixir.MIME']},
     {path,["$ROOT/lib/plug-1.4.3/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Plug.Conn','Elixir.Inspect.Plug.Conn',
          'Elixir.Plug','Elixir.Plug.Adapters.Cowboy',
          'Elixir.Plug.Adapters.Cowboy.Conn',
          'Elixir.Plug.Adapters.Cowboy.Handler',
          'Elixir.Plug.Adapters.Test.Conn','Elixir.Plug.Adapters.Translator',
          'Elixir.Plug.BadRequestError','Elixir.Plug.Builder',
          'Elixir.Plug.CSRFProtection',
          'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
          'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
          'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
          'Elixir.Plug.Conn.AlreadySentError',
          'Elixir.Plug.Conn.CookieOverflowError','Elixir.Plug.Conn.Cookies',
          'Elixir.Plug.Conn.InvalidHeaderError',
          'Elixir.Plug.Conn.InvalidQueryError',
          'Elixir.Plug.Conn.NotSentError','Elixir.Plug.Conn.Query',
          'Elixir.Plug.Conn.Status','Elixir.Plug.Conn.Unfetched',
          'Elixir.Plug.Conn.Utils','Elixir.Plug.Conn.WrapperError',
          'Elixir.Plug.Crypto','Elixir.Plug.Crypto.KeyGenerator',
          'Elixir.Plug.Crypto.MessageEncryptor',
          'Elixir.Plug.Crypto.MessageVerifier','Elixir.Plug.Debugger',
          'Elixir.Plug.ErrorHandler','Elixir.Plug.Exception',
          'Elixir.Plug.Exception.Any','Elixir.Plug.HTML','Elixir.Plug.Head',
          'Elixir.Plug.Logger','Elixir.Plug.MIME',
          'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
          'Elixir.Plug.Parsers.BadEncodingError','Elixir.Plug.Parsers.JSON',
          'Elixir.Plug.Parsers.MULTIPART','Elixir.Plug.Parsers.ParseError',
          'Elixir.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Parsers.URLENCODED',
          'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.RequestId','Elixir.Plug.Router',
          'Elixir.Plug.Router.InvalidSpecError','Elixir.Plug.Router.Utils',
          'Elixir.Plug.SSL','Elixir.Plug.Session',
          'Elixir.Plug.Session.COOKIE','Elixir.Plug.Session.ETS',
          'Elixir.Plug.Session.Store','Elixir.Plug.Static',
          'Elixir.Plug.Static.InvalidPathError','Elixir.Plug.Supervisor',
          'Elixir.Plug.Test','Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
          'Elixir.Plug.UploadError',plug_multipart]},
     {path,["$ROOT/lib/cowlib-1.0.2/ebin"]},
     {primLoad,
         [cow_cookie,cow_date,cow_http,cow_http_hd,cow_http_te,cow_mimetypes,
          cow_multipart,cow_qs,cow_spdy]},
     {path,["$ROOT/lib/ranch-1.3.2/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_listener_sup,ranch_protocol,ranch_server,ranch_ssl,ranch_sup,
          ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/cowboy-1.1.2/ebin"]},
     {primLoad,
         [cow_uri,cowboy,cowboy_app,cowboy_bstr,cowboy_clock,cowboy_handler,
          cowboy_http,cowboy_http_handler,cowboy_loop_handler,
          cowboy_middleware,cowboy_protocol,cowboy_req,cowboy_rest,
          cowboy_router,cowboy_spdy,cowboy_static,cowboy_sub_protocol,
          cowboy_sup,cowboy_websocket,cowboy_websocket_handler]},
     {path,["$ROOT/lib/poison-3.1.0/ebin"]},
     {primLoad,
         ['Elixir.Poison','Elixir.Poison.Decode','Elixir.Poison.Decoder',
          'Elixir.Poison.Decoder.Any','Elixir.Poison.Encode',
          'Elixir.Poison.EncodeError','Elixir.Poison.Encoder',
          'Elixir.Poison.Encoder.Any','Elixir.Poison.Encoder.Atom',
          'Elixir.Poison.Encoder.BitString','Elixir.Poison.Encoder.Date',
          'Elixir.Poison.Encoder.DateTime','Elixir.Poison.Encoder.Float',
          'Elixir.Poison.Encoder.HashSet','Elixir.Poison.Encoder.Integer',
          'Elixir.Poison.Encoder.List','Elixir.Poison.Encoder.Map',
          'Elixir.Poison.Encoder.MapSet',
          'Elixir.Poison.Encoder.NaiveDateTime','Elixir.Poison.Encoder.Range',
          'Elixir.Poison.Encoder.Stream','Elixir.Poison.Encoder.Time',
          'Elixir.Poison.Parser','Elixir.Poison.Pretty',
          'Elixir.Poison.SyntaxError']},
     {path,["$ROOT/lib/maru-0.12.5/ebin"]},
     {primLoad,
         ['Elixir.Maru','Elixir.Maru.Builder','Elixir.Maru.Builder.Before',
          'Elixir.Maru.Builder.DSLs','Elixir.Maru.Builder.Description',
          'Elixir.Maru.Builder.Endpoint','Elixir.Maru.Builder.Exceptions',
          'Elixir.Maru.Builder.Extend','Elixir.Maru.Builder.Methods',
          'Elixir.Maru.Builder.Namespaces','Elixir.Maru.Builder.Params',
          'Elixir.Maru.Builder.Path','Elixir.Maru.Builder.Pipeline',
          'Elixir.Maru.Builder.PlugRouter','Elixir.Maru.Builder.Route',
          'Elixir.Maru.Builder.Versioning',
          'Elixir.Maru.Builder.Versioning.AcceptHeader',
          'Elixir.Maru.Builder.Versioning.AcceptVersionHeader',
          'Elixir.Maru.Builder.Versioning.None',
          'Elixir.Maru.Builder.Versioning.Parameter',
          'Elixir.Maru.Builder.Versioning.Path','Elixir.Maru.Exceptions',
          'Elixir.Maru.Exceptions.InvalidFormat',
          'Elixir.Maru.Exceptions.MethodNotAllowed',
          'Elixir.Maru.Exceptions.NotFound',
          'Elixir.Maru.Exceptions.UndefinedType',
          'Elixir.Maru.Exceptions.UndefinedValidator',
          'Elixir.Maru.Exceptions.Validation','Elixir.Maru.Helper',
          'Elixir.Maru.Helpers.Response','Elixir.Maru.Middleware',
          'Elixir.Maru.Parameter.Phoenix','Elixir.Maru.Plugs.GetVersion',
          'Elixir.Maru.Plugs.NotFound','Elixir.Maru.Plugs.PutVersion',
          'Elixir.Maru.Plugs.SaveConn','Elixir.Maru.Router',
          'Elixir.Maru.Runtime','Elixir.Maru.Struct.Dependent',
          'Elixir.Maru.Struct.Dependent.Information',
          'Elixir.Maru.Struct.Dependent.Runtime',
          'Elixir.Maru.Struct.Endpoint','Elixir.Maru.Struct.Exception',
          'Elixir.Maru.Struct.Parameter',
          'Elixir.Maru.Struct.Parameter.Information',
          'Elixir.Maru.Struct.Parameter.Runtime','Elixir.Maru.Struct.Plug',
          'Elixir.Maru.Struct.Resource','Elixir.Maru.Struct.Route',
          'Elixir.Maru.Struct.Validator',
          'Elixir.Maru.Struct.Validator.Information',
          'Elixir.Maru.Struct.Validator.Runtime','Elixir.Maru.Supervisor',
          'Elixir.Maru.Test','Elixir.Maru.Type','Elixir.Maru.Types.Atom',
          'Elixir.Maru.Types.Base64','Elixir.Maru.Types.Boolean',
          'Elixir.Maru.Types.Charlist','Elixir.Maru.Types.File',
          'Elixir.Maru.Types.Float','Elixir.Maru.Types.Integer',
          'Elixir.Maru.Types.Json','Elixir.Maru.Types.List',
          'Elixir.Maru.Types.Map','Elixir.Maru.Types.String',
          'Elixir.Maru.Utils','Elixir.Maru.Validations',
          'Elixir.Maru.Validations.AllOrNoneOf',
          'Elixir.Maru.Validations.AllowBlank',
          'Elixir.Maru.Validations.AtLeastOneOf',
          'Elixir.Maru.Validations.ExactlyOneOf',
          'Elixir.Maru.Validations.MutuallyExclusive',
          'Elixir.Maru.Validations.Regexp','Elixir.Maru.Validations.Values',
          'Elixir.Mix.Tasks.Maru.Routes']},
     {path,["$ROOT/lib/maru_swagger-0.8.3/ebin"]},
     {primLoad,
         ['Elixir.MaruSwagger','Elixir.MaruSwagger.ConfigStruct',
          'Elixir.MaruSwagger.DSL','Elixir.MaruSwagger.ParamsExtractor',
          'Elixir.MaruSwagger.ParamsExtractor.NonGetBodyParamsGenerator',
          'Elixir.MaruSwagger.ParamsExtractor.NonGetFormDataParamsGenerator',
          'Elixir.MaruSwagger.Plug','Elixir.MaruSwagger.ResponseFormatter']},
     {path,["$ROOT/lib/uuid-1.1.8/ebin"]},
     {primLoad,['Elixir.UUID']},
     {path,
         ["$ROOT/lib/exometer_report_graphite-0.0.0+build.476.ref699ea55/ebin"]},
     {primLoad,[exometer_report_graphite]},
     {path,["$ROOT/lib/tools-2.11.2/ebin"]},
     {primLoad,
         [cover,eprof,fprof,instrument,lcnt,make,xref,xref_base,xref_compiler,
          xref_parser,xref_reader,xref_scanner,xref_utils]},
     {path,["$ROOT/lib/meck-0.8.9/ebin"]},
     {primLoad,
         [meck,meck_args_matcher,meck_code,meck_code_gen,meck_cover,
          meck_expect,meck_history,meck_matcher,meck_proc,meck_ret_spec,
          meck_util]},
     {path,["$ROOT/lib/confex-3.3.1/ebin"]},
     {primLoad,
         ['Elixir.Confex','Elixir.Confex.Adapter',
          'Elixir.Confex.Adapters.FileFromSystemEnvironment',
          'Elixir.Confex.Adapters.SystemEnvironment','Elixir.Confex.Resolver',
          'Elixir.Confex.Type']},
     {path,["$ROOT/lib/runtime_tools-1.12.5/ebin"]},
     {primLoad,
         [appmon_info,dbg,dyntrace,erts_alloc_config,msacc,observer_backend,
          runtime_tools,runtime_tools_sup,system_information,ttb_autostart]},
     {path,["$ROOT/lib/mongoose_push-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.Certs.Dev','Elixir.Mix.Tasks.Compile.Asn1',
          'Elixir.MongoosePush','Elixir.MongoosePush.API.V1',
          'Elixir.MongoosePush.API.V2','Elixir.MongoosePush.Application',
          'Elixir.MongoosePush.Metrics','Elixir.MongoosePush.Pools',
          'Elixir.MongoosePush.Router','Elixir.MongoosePush.Service',
          'Elixir.MongoosePush.Service.APNS',
          'Elixir.MongoosePush.Service.APNS.Certificate',
          'Elixir.MongoosePush.Service.FCM']},
     {path,["$ROOT/lib/iex-1.6.4/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.CLI','Elixir.IEx.Config','Elixir.IEx.Evaluator',
          'Elixir.IEx.Helpers','Elixir.IEx.History','Elixir.IEx.Info',
          'Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
          'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.NaiveDateTime',
          'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Time',
          'Elixir.IEx.Info.Tuple','Elixir.IEx.Introspection','Elixir.IEx.Pry',
          'Elixir.IEx.Remsh','Elixir.IEx.Server','Elixir.IEx.State']},
     {path,["$ROOT/lib/sasl-3.1.2/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,si,si_sasl_supp,systools,
          systools_lib,systools_make,systools_rc,systools_relup]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-5.4.3.2/ebin","$ROOT/lib/stdlib-3.4.5/ebin",
          "$ROOT/lib/compiler-7.1.5.2/ebin","$ROOT/lib/elixir-1.6.4/ebin",
          "$ROOT/lib/logger-1.6.4/ebin","$ROOT/lib/mix_docker-0.5.0/ebin",
          "$ROOT/lib/distillery-1.5.2/ebin","$ROOT/lib/poolboy-1.5.1/ebin",
          "$ROOT/lib/hpack-0.2.3/ebin","$ROOT/lib/syntax_tools-2.1.4.1/ebin",
          "$ROOT/lib/goldrush-0.1.9/ebin","$ROOT/lib/lager-3.5.2/ebin",
          "$ROOT/lib/asn1-5.0.5.1/ebin","$ROOT/lib/crypto-4.2.2.2/ebin",
          "$ROOT/lib/public_key-1.5.2/ebin","$ROOT/lib/ssl-8.2.6.2/ebin",
          "$ROOT/lib/chatterbox-0.4.1+build.296.ref6f223e4/ebin",
          "$ROOT/lib/metrics-1.0.1/ebin",
          "$ROOT/lib/ssl_verify_fun-1.1.1/ebin",
          "$ROOT/lib/certifi-2.0.0/ebin","$ROOT/lib/mimerl-1.0.2/ebin",
          "$ROOT/lib/unicode_util_compat-0.3.1/ebin",
          "$ROOT/lib/idna-5.1.0/ebin","$ROOT/lib/hackney-1.10.1/ebin",
          "$ROOT/lib/httpoison-0.13.0/ebin","$ROOT/lib/pigeon-0.10.3/ebin",
          "$ROOT/lib/pobox-1.0.4/ebin","$ROOT/lib/bear-0.8.5/ebin",
          "$ROOT/lib/folsom-0.8.5/ebin","$ROOT/lib/hut-1.2.0/ebin",
          "$ROOT/lib/exometer_core-2017-12-11/ebin",
          "$ROOT/lib/elixometer-1.3.0-dev/ebin","$ROOT/lib/mime-1.1.0/ebin",
          "$ROOT/lib/plug-1.4.3/ebin","$ROOT/lib/cowlib-1.0.2/ebin",
          "$ROOT/lib/ranch-1.3.2/ebin","$ROOT/lib/cowboy-1.1.2/ebin",
          "$ROOT/lib/poison-3.1.0/ebin","$ROOT/lib/maru-0.12.5/ebin",
          "$ROOT/lib/maru_swagger-0.8.3/ebin","$ROOT/lib/uuid-1.1.8/ebin",
          "$ROOT/lib/exometer_report_graphite-0.0.0+build.476.ref699ea55/ebin",
          "$ROOT/lib/tools-2.11.2/ebin","$ROOT/lib/meck-0.8.9/ebin",
          "$ROOT/lib/confex-3.3.1/ebin","$ROOT/lib/runtime_tools-1.12.5/ebin",
          "$ROOT/lib/mongoose_push-0.1.0/ebin","$ROOT/lib/iex-1.6.4/ebin",
          "$ROOT/lib/sasl-3.1.2/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,error_logger,{error_logger,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"5.4.3.2"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        erl_signal_handler,error_handler,error_logger,file,
                        file_server,file_io_server,global,global_group,
                        global_search,group,group_history,heart,
                        hipe_unified_loader,inet6_tcp,inet6_tcp_dist,
                        inet6_udp,inet6_sctp,inet_config,inet_hosts,
                        inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,local_tcp,local_udp,net,net_adm,
                        net_kernel,os,ram_file,rpc,user,user_drv,user_sup,
                        disk_log,disk_log_1,disk_log_server,disk_log_sup,
                        dist_ac,erl_ddll,erl_epmd,erts_debug,gen_tcp,gen_udp,
                        gen_sctp,inet,inet_db,inet_dns,inet_parse,inet_res,
                        inet_tcp,inet_udp,inet_sctp,pg2,seq_trace,
                        standard_error,wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_sup,net_kernel,net_sup,rex,
                        user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[{error_logger,tty}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.4.5"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_expand,epp,eval_bits,
                        erl_abstract_code,erl_anno,erl_bits,erl_compile,
                        erl_eval,erl_expand_records,erl_internal,erl_lint,
                        erl_parse,erl_posix_msg,erl_pp,erl_scan,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,gen_statem,io,io_lib,
                        io_lib_format,io_lib_fread,io_lib_pretty,lib,lists,
                        log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,pool,proc_lib,proplists,qlc,qlc_pt,queue,
                        rand,random,re,sets,shell,shell_default,slave,sofs,
                        string,supervisor,supervisor_bridge,sys,timer,unicode,
                        unicode_util,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"7.1.5.2"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_bs,beam_bsm,
                        beam_clean,beam_dead,beam_dict,beam_disasm,
                        beam_except,beam_flatten,beam_jump,beam_listing,
                        beam_opcodes,beam_peep,beam_receive,beam_reorder,
                        beam_record,beam_split,beam_trim,beam_type,beam_utils,
                        beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,
                        cerl_sets,cerl_trees,compile,core_scan,core_lint,
                        core_parse,core_pp,core_lib,erl_bifs,rec_env,
                        sys_core_bsm,sys_core_dsetel,sys_core_fold,
                        sys_core_fold_lists,sys_core_inline,
                        sys_pre_attributes,v3_codegen,v3_core,v3_kernel,
                        v3_kernel_pp,v3_life]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.6.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadBooleanError',
                        'Elixir.BadFunctionError','Elixir.BadMapError',
                        'Elixir.BadStructError','Elixir.Base',
                        'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
                        'Elixir.Calendar.ISO','Elixir.CaseClauseError',
                        'Elixir.Code','Elixir.Code.Formatter',
                        'Elixir.Code.Identifier','Elixir.Code.LoadError',
                        'Elixir.Collectable','Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.CompileError',
                        'Elixir.CondClauseError','Elixir.Date',
                        'Elixir.Date.Range','Elixir.DateTime','Elixir.Dict',
                        'Elixir.DynamicSupervisor','Elixir.Enum',
                        'Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
                        'Elixir.Enumerable.Date.Range',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.ErlangError',
                        'Elixir.Exception','Elixir.File',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.LinkError','Elixir.File.Stat',
                        'Elixir.File.Stream','Elixir.Float',
                        'Elixir.FunctionClauseError','Elixir.GenEvent',
                        'Elixir.GenEvent.Stream','Elixir.GenServer',
                        'Elixir.HashDict','Elixir.HashSet','Elixir.IO',
                        'Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
                        'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.Inspect',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date','Elixir.Inspect.Date.Range',
                        'Elixir.Inspect.DateTime','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Map','Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.Version',
                        'Elixir.Inspect.Version.Requirement','Elixir.Integer',
                        'Elixir.Kernel','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.KeyError',
                        'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.Macro',
                        'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet',
                        'Elixir.MatchError','Elixir.Module',
                        'Elixir.Module.LocalsTracker','Elixir.NaiveDateTime',
                        'Elixir.Node','Elixir.OptionParser',
                        'Elixir.OptionParser.ParseError','Elixir.Path',
                        'Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
                        'Elixir.Protocol','Elixir.Protocol.UndefinedError',
                        'Elixir.Range','Elixir.Record',
                        'Elixir.Record.Extractor','Elixir.Regex',
                        'Elixir.Regex.CompileError','Elixir.Registry',
                        'Elixir.Registry.Partition',
                        'Elixir.Registry.Supervisor','Elixir.RuntimeError',
                        'Elixir.Set','Elixir.Stream','Elixir.Stream.Reducers',
                        'Elixir.String','Elixir.String.Break',
                        'Elixir.String.Casing','Elixir.String.Chars',
                        'Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Normalizer','Elixir.String.Tokenizer',
                        'Elixir.String.Unicode','Elixir.StringIO',
                        'Elixir.Supervisor','Elixir.Supervisor.Default',
                        'Elixir.Supervisor.Spec','Elixir.SyntaxError',
                        'Elixir.System','Elixir.SystemLimitError',
                        'Elixir.Task','Elixir.Task.Supervised',
                        'Elixir.Task.Supervisor','Elixir.Time',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError','Elixir.Version',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Requirement',
                        'Elixir.WithClauseError',elixir,elixir_aliases,
                        elixir_bitstring,elixir_bootstrap,elixir_clauses,
                        elixir_code_server,elixir_compiler,elixir_config,
                        elixir_def,elixir_dispatch,elixir_env,elixir_erl,
                        elixir_erl_clauses,elixir_erl_compiler,elixir_erl_for,
                        elixir_erl_pass,elixir_erl_try,elixir_erl_var,
                        elixir_errors,elixir_expand,elixir_fn,elixir_import,
                        elixir_interpolation,elixir_lexical,elixir_locals,
                        elixir_map,elixir_module,elixir_overridable,
                        elixir_parser,elixir_quote,elixir_rewrite,elixir_sup,
                        elixir_tokenizer,elixir_utils]},
                   {registered,[elixir_config,elixir_code_server]},
                   {applications,[kernel,stdlib,compiler]},
                   {included_applications,[]},
                   {env,[{ansi_enabled,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.6.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.ErrorHandler',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils','Elixir.Logger.Watcher',
                        'Elixir.Logger.WatcherSupervisor']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.Supervisor',
                        'Elixir.Logger.Watcher']},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,
                       [{level,debug},
                        {utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {discard_threshold,500},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {discard_threshold_for_error_logger,500},
                        {compile_time_purge_level,debug},
                        {compile_time_application,nil},
                        {translator_inspect_opts,[]},
                        {console,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,mix_docker,
                  [{description,
                       "Put your Elixir app production release inside minimal docker image"},
                   {vsn,"0.5.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.Docker.Build',
                        'Elixir.Mix.Tasks.Docker.Customize',
                        'Elixir.Mix.Tasks.Docker.Init',
                        'Elixir.Mix.Tasks.Docker.Publish',
                        'Elixir.Mix.Tasks.Docker.Release',
                        'Elixir.Mix.Tasks.Docker.Shipit','Elixir.MixDocker']},
                   {registered,[]},
                   {applications,[kernel,stdlib,logger,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,distillery,
                  [{description,
                       "Build releases of your Mix projects with ease!\n"},
                   {vsn,"1.5.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Distillery.Cookies','Elixir.Distillery.IO',
                        'Elixir.Mix.Releases.App','Elixir.Mix.Releases.Appup',
                        'Elixir.Mix.Releases.Archiver',
                        'Elixir.Mix.Releases.Assembler',
                        'Elixir.Mix.Releases.Config',
                        'Elixir.Mix.Releases.Config.LoadError',
                        'Elixir.Mix.Releases.Environment',
                        'Elixir.Mix.Releases.Errors',
                        'Elixir.Mix.Releases.Logger',
                        'Elixir.Mix.Releases.Overlays',
                        'Elixir.Mix.Releases.Plugin',
                        'Elixir.Mix.Releases.Profile',
                        'Elixir.Mix.Releases.Release',
                        'Elixir.Mix.Releases.Utils',
                        'Elixir.Mix.Tasks.Release',
                        'Elixir.Mix.Tasks.Release.Clean',
                        'Elixir.Mix.Tasks.Release.Init']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,poolboy,
                  [{description,"A hunky Erlang worker pool factory"},
                   {vsn,"1.5.1"},
                   {id,[]},
                   {modules,[poolboy,poolboy_sup,poolboy_worker]},
                   {registered,[poolboy]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,hpack,
                  [{description,"HPACK Implementation"},
                   {vsn,"0.2.3"},
                   {id,[]},
                   {modules,
                       [hpack,hpack_index,hpack_integer,hpack_string,huffman]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"2.1.4.1"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,erl_tidy,igor,
                        merl,merl_transform,prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,goldrush,
                  [{description,"Erlang event stream processor"},
                   {vsn,"0.1.9"},
                   {id,[]},
                   {modules,
                       [glc,glc_code,glc_lib,glc_ops,glc_run,gr_app,
                        gr_context,gr_counter,gr_counter_sup,gr_manager,
                        gr_manager_sup,gr_param,gr_param_sup,gr_sup,gre]},
                   {registered,[]},
                   {applications,[kernel,stdlib,syntax_tools,compiler]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gr_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,lager,
                  [{description,"Erlang logging framework"},
                   {vsn,"3.5.2"},
                   {id,[]},
                   {modules,
                       [error_logger_lager_h,lager,lager_app,
                        lager_backend_throttle,lager_common_test_backend,
                        lager_config,lager_console_backend,lager_crash_log,
                        lager_default_formatter,lager_file_backend,
                        lager_format,lager_handler_watcher,
                        lager_handler_watcher_sup,lager_manager_killer,
                        lager_msg,lager_stdlib,lager_sup,lager_transform,
                        lager_trunc_io,lager_util]},
                   {registered,
                       [lager_sup,lager_event,lager_crash_log,
                        lager_handler_watcher_sup]},
                   {applications,[kernel,stdlib,goldrush]},
                   {included_applications,[]},
                   {env,
                       [{colored,false},
                        {colors,
                            [{debug,"\e[0;38m"},
                             {info,"\e[1;37m"},
                             {notice,"\e[1;36m"},
                             {warning,"\e[1;33m"},
                             {error,"\e[1;31m"},
                             {critical,"\e[1;35m"},
                             {alert,"\e[1;44m"},
                             {emergency,"\e[1;41m"}]},
                        {crash_log,"log/crash.log"},
                        {crash_log_msg_size,65536},
                        {crash_log_size,10485760},
                        {crash_log_date,"$D0"},
                        {crash_log_count,5},
                        {error_logger_redirect,true},
                        {error_logger_hwm,50},
                        {async_threshold,20},
                        {async_threshold_window,5}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{lager_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.0.5.1"},
                   {vsn,"5.0.5.1"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"4.2.2.2"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[{fips_mode,false}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.5.2"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,asn1,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"8.2.6.2"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_handshake,tls_record,tls_socket,
                        tls_v1,ssl_v3,ssl_v2,tls_connection_sup,
                        dtls_connection,dtls_handshake,dtls_record,
                        dtls_socket,dtls_v1,dtls_connection_sup,
                        dtls_udp_listener,dtls_udp_sup,ssl,tls,dtls,
                        ssl_session_cache_api,ssl_config,ssl_connection,
                        ssl_handshake,ssl_record,ssl_cipher,ssl_srp_primes,
                        ssl_alert,ssl_listen_tracker_sup,inet_tls_dist,
                        inet6_tls_dist,ssl_tls_dist_proxy,ssl_dist_sup,
                        ssl_dist_connection_sup,ssl_dist_admin_sup,
                        ssl_session,ssl_session_cache,ssl_manager,
                        ssl_pem_cache,ssl_pkix_db,ssl_certificate,ssl_crl,
                        ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,
                        ssl_app,ssl_sup,ssl_admin_sup,ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[kernel,stdlib,public_key,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,chatterbox,
                  [{description,"chatterbox library for http2"},
                   {vsn,"0.4.1+build.296.ref6f223e4"},
                   {id,[]},
                   {modules,
                       [chatterbox,chatterbox_app,chatterbox_ranch_protocol,
                        chatterbox_static_content_handler,
                        chatterbox_static_stream,chatterbox_sup,h2_client,
                        h2_connection,h2_frame,h2_frame_continuation,
                        h2_frame_data,h2_frame_goaway,h2_frame_headers,
                        h2_frame_ping,h2_frame_priority,h2_frame_push_promise,
                        h2_frame_rst_stream,h2_frame_settings,
                        h2_frame_window_update,h2_padding,h2_settings,
                        h2_stream,h2_stream_set,sock]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,hpack,lager,ssl,public_key,crypto]},
                   {included_applications,[]},
                   {env,
                       [{port,80},
                        {concurrent_acceptors,20},
                        {client_header_table_size,4096},
                        {client_enable_push,1},
                        {client_max_concurrent_streams,unlimited},
                        {client_initial_window_size,65535},
                        {client_max_frame_size,16384},
                        {client_max_header_list_size,unlimited},
                        {client_flow_control,auto},
                        {server_header_table_size,4096},
                        {server_enable_push,1},
                        {server_max_concurrent_streams,unlimited},
                        {server_initial_window_size,65535},
                        {server_max_frame_size,16384},
                        {server_max_header_list_size,unlimited},
                        {server_flow_control,auto}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,metrics,
                  [{description,
                       "A generic interface to different metrics systems in Erlang."},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       [metrics,metrics_dummy,metrics_exometer,
                        metrics_folsom]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl_verify_fun,
                  [{description,[]},
                   {vsn,"1.1.1"},
                   {id,[]},
                   {modules,
                       [ssl_verify_fingerprint,ssl_verify_hostname,
                        ssl_verify_pk,ssl_verify_util]},
                   {registered,[]},
                   {applications,[kernel,stdlib,ssl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,certifi,
                  [{description,"An OTP library"},
                   {vsn,"2.0.0"},
                   {id,[]},
                   {modules,[certifi,certifi_pt]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mimerl,
                  [{description,"An OTP library"},
                   {vsn,"1.0.2"},
                   {id,[]},
                   {modules,[mimerl]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,unicode_util_compat,
                  [{description,
                       "unicode_util compatibility library for Erlang < 20"},
                   {vsn,"0.3.1"},
                   {id,[]},
                   {modules,[unicode_util_compat]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,idna,
                  [{description,"A pure Erlang IDNA implementation"},
                   {vsn,"5.1.0"},
                   {id,[]},
                   {modules,[idna,idna_ucs,punycode]},
                   {registered,[]},
                   {applications,[kernel,stdlib,unicode_util_compat]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,hackney,
                  [{description,"simple HTTP client"},
                   {vsn,"1.10.1"},
                   {id,[]},
                   {modules,
                       [hackney,hackney_app,hackney_bstr,hackney_connect,
                        hackney_cookie,hackney_date,hackney_headers,
                        hackney_headers_new,hackney_http,hackney_http_connect,
                        hackney_local_tcp,hackney_manager,hackney_multipart,
                        hackney_pool,hackney_pool_handler,hackney_request,
                        hackney_response,hackney_socks5,hackney_ssl,
                        hackney_stream,hackney_sup,hackney_tcp,hackney_trace,
                        hackney_url,hackney_util]},
                   {registered,[hackney_pool]},
                   {applications,
                       [kernel,stdlib,metrics,ssl_verify_fun,certifi,mimerl,
                        idna,ssl,public_key,asn1,crypto]},
                   {included_applications,[]},
                   {env,
                       [{timeout,150000},
                        {max_connections,50},
                        {restart,permanent},
                        {shutdown,10000},
                        {maxr,10},
                        {maxt,1}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{hackney_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,httpoison,
                  [{description,
                       "  Yet Another HTTP client for Elixir powered by hackney\n"},
                   {vsn,"0.13.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.HTTPoison','Elixir.HTTPoison.AsyncChunk',
                        'Elixir.HTTPoison.AsyncEnd',
                        'Elixir.HTTPoison.AsyncHeaders',
                        'Elixir.HTTPoison.AsyncRedirect',
                        'Elixir.HTTPoison.AsyncResponse',
                        'Elixir.HTTPoison.AsyncStatus',
                        'Elixir.HTTPoison.Base','Elixir.HTTPoison.Error',
                        'Elixir.HTTPoison.Response']},
                   {registered,[]},
                   {applications,[kernel,stdlib,hackney,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,pigeon,
                  [{description,
                       "HTTP2-compliant wrapper for sending iOS (APNS), Android (GCM), and Amazon Android (ADM) push notifications.\n"},
                   {vsn,"0.10.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Pigeon','Elixir.Pigeon.ADM',
                        'Elixir.Pigeon.ADM.Config',
                        'Elixir.Pigeon.ADM.Notification',
                        'Elixir.Pigeon.ADMWorker','Elixir.Pigeon.APNS',
                        'Elixir.Pigeon.APNS.Config',
                        'Elixir.Pigeon.APNS.Notification',
                        'Elixir.Pigeon.APNSWorker','Elixir.Pigeon.GCM',
                        'Elixir.Pigeon.GCM.Notification',
                        'Elixir.Pigeon.GCM.NotificationResponse',
                        'Elixir.Pigeon.GCMWorker',
                        'Elixir.Pigeon.GenericH2Worker','Elixir.Pigeon.H2',
                        'Elixir.Pigeon.Notification']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,poolboy,hpack,chatterbox,httpoison,
                        logger,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Pigeon',[]}}]}]}},
     {apply,
         {application,load,
             [{application,pobox,
                  [{description,
                       "External buffer processes to protect against mailbox overflow"},
                   {vsn,"1.0.4"},
                   {id,[]},
                   {modules,[pobox]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,bear,
                  [{description,"A set of statistics functions for erlang"},
                   {vsn,"0.8.5"},
                   {id,[]},
                   {modules,[bear]},
                   {registered,[]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,folsom,
                  [{description,"Erlang based metrics system"},
                   {vsn,"0.8.5"},
                   {id,[]},
                   {modules,
                       [folsom,folsom_ets,folsom_ewma,
                        folsom_meter_timer_server,folsom_metrics,
                        folsom_metrics_counter,folsom_metrics_duration,
                        folsom_metrics_gauge,folsom_metrics_histogram,
                        folsom_metrics_histogram_ets,folsom_metrics_history,
                        folsom_metrics_meter,folsom_metrics_meter_reader,
                        folsom_metrics_spiral,folsom_sample,
                        folsom_sample_exdec,folsom_sample_none,
                        folsom_sample_slide,folsom_sample_slide_server,
                        folsom_sample_slide_sorted,folsom_sample_slide_sup,
                        folsom_sample_slide_uniform,folsom_sample_uniform,
                        folsom_sup,folsom_utils,folsom_vm_metrics]},
                   {registered,
                       [folsom_meter_timer_server,
                        folsom_metrics_histogram_ets,folsom_sup]},
                   {applications,[kernel,stdlib,bear]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{folsom,[]}}]}]}},
     {apply,
         {application,load,
             [{application,hut,
                  [{description,
                       "helper library for making Erlang libraries logging framework agnostic"},
                   {vsn,"1.2.0"},
                   {id,"git"},
                   {modules,[]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,exometer_core,
                  [{description,
                       "Code instrumentation and metrics collection package."},
                   {vsn,"2017-12-11"},
                   {id,[]},
                   {modules,
                       [exo_montest,exometer,exometer_admin,exometer_alias,
                        exometer_cache,exometer_core_app,exometer_core_sup,
                        exometer_cpu,exometer_duration,exometer_entry,
                        exometer_folsom,exometer_folsom_monitor,
                        exometer_function,exometer_global,exometer_histogram,
                        exometer_igor,exometer_info,exometer_probe,
                        exometer_proc,exometer_report,exometer_report_logger,
                        exometer_report_logger_sup,exometer_report_tty,
                        exometer_setup,exometer_shallowtree,exometer_slide,
                        exometer_slot_slide,exometer_spiral,exometer_uniform,
                        exometer_util]},
                   {registered,[]},
                   {applications,[kernel,stdlib,folsom,hut]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {start_phases,[{start_reporters,[]},{preset_defaults,[]}]},
                   {mod,{exometer_core_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,elixometer,
                  [{description,
                       "Elixometer is a light wrapper around exometer that defines and subscribes\nmetrics automatically to the configured reporter.\n"},
                   {vsn,"1.3.0-dev"},
                   {id,[]},
                   {modules,
                       ['Elixir.Elixometer','Elixir.Elixometer.App',
                        'Elixir.Elixometer.Config',
                        'Elixir.Elixometer.Supervisor',
                        'Elixir.Elixometer.Timer','Elixir.Elixometer.Updater',
                        'Elixir.Elixometer.Utils']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,pobox,lager,exometer_core,elixir]},
                   {included_applications,[]},
                   {env,[{update_frequency,1000}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Elixometer.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,mime,
                  [{description,"A MIME type module for Elixir"},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,['Elixir.MIME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug,
                  [{description,
                       "A specification and conveniences for composable modules between web applications"},
                   {vsn,"1.4.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Plug.Conn',
                        'Elixir.Inspect.Plug.Conn','Elixir.Plug',
                        'Elixir.Plug.Adapters.Cowboy',
                        'Elixir.Plug.Adapters.Cowboy.Conn',
                        'Elixir.Plug.Adapters.Cowboy.Handler',
                        'Elixir.Plug.Adapters.Test.Conn',
                        'Elixir.Plug.Adapters.Translator',
                        'Elixir.Plug.BadRequestError','Elixir.Plug.Builder',
                        'Elixir.Plug.CSRFProtection',
                        'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
                        'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
                        'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
                        'Elixir.Plug.Conn.AlreadySentError',
                        'Elixir.Plug.Conn.CookieOverflowError',
                        'Elixir.Plug.Conn.Cookies',
                        'Elixir.Plug.Conn.InvalidHeaderError',
                        'Elixir.Plug.Conn.InvalidQueryError',
                        'Elixir.Plug.Conn.NotSentError',
                        'Elixir.Plug.Conn.Query','Elixir.Plug.Conn.Status',
                        'Elixir.Plug.Conn.Unfetched','Elixir.Plug.Conn.Utils',
                        'Elixir.Plug.Conn.WrapperError','Elixir.Plug.Crypto',
                        'Elixir.Plug.Crypto.KeyGenerator',
                        'Elixir.Plug.Crypto.MessageEncryptor',
                        'Elixir.Plug.Crypto.MessageVerifier',
                        'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
                        'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
                        'Elixir.Plug.HTML','Elixir.Plug.Head',
                        'Elixir.Plug.Logger','Elixir.Plug.MIME',
                        'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
                        'Elixir.Plug.Parsers.BadEncodingError',
                        'Elixir.Plug.Parsers.JSON',
                        'Elixir.Plug.Parsers.MULTIPART',
                        'Elixir.Plug.Parsers.ParseError',
                        'Elixir.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Parsers.URLENCODED',
                        'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.RequestId','Elixir.Plug.Router',
                        'Elixir.Plug.Router.InvalidSpecError',
                        'Elixir.Plug.Router.Utils','Elixir.Plug.SSL',
                        'Elixir.Plug.Session','Elixir.Plug.Session.COOKIE',
                        'Elixir.Plug.Session.ETS','Elixir.Plug.Session.Store',
                        'Elixir.Plug.Static',
                        'Elixir.Plug.Static.InvalidPathError',
                        'Elixir.Plug.Supervisor','Elixir.Plug.Test',
                        'Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
                        'Elixir.Plug.UploadError',plug_multipart]},
                   {registered,[]},
                   {applications,[kernel,stdlib,mime,crypto,logger,elixir]},
                   {included_applications,[]},
                   {env,[{validate_header_keys_during_test,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug',[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"1.0.2"},
                   {id,"git"},
                   {modules,
                       [cow_cookie,cow_date,cow_http,cow_http_hd,cow_http_te,
                        cow_mimetypes,cow_multipart,cow_qs,cow_spdy]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.3.2"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_listener_sup,ranch_protocol,
                        ranch_server,ranch_ssl,ranch_sup,ranch_tcp,
                        ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[kernel,stdlib,ssl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modular HTTP server."},
                   {vsn,"1.1.2"},
                   {id,"git"},
                   {modules,
                       [cow_uri,cowboy,cowboy_app,cowboy_bstr,cowboy_clock,
                        cowboy_handler,cowboy_http,cowboy_http_handler,
                        cowboy_loop_handler,cowboy_middleware,cowboy_protocol,
                        cowboy_req,cowboy_rest,cowboy_router,cowboy_spdy,
                        cowboy_static,cowboy_sub_protocol,cowboy_sup,
                        cowboy_websocket,cowboy_websocket_handler]},
                   {registered,[cowboy_clock,cowboy_sup]},
                   {applications,[kernel,stdlib,cowlib,ranch,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,poison,
                  [{description,
                       "An incredibly fast, pure Elixir JSON library"},
                   {vsn,"3.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Poison','Elixir.Poison.Decode',
                        'Elixir.Poison.Decoder','Elixir.Poison.Decoder.Any',
                        'Elixir.Poison.Encode','Elixir.Poison.EncodeError',
                        'Elixir.Poison.Encoder','Elixir.Poison.Encoder.Any',
                        'Elixir.Poison.Encoder.Atom',
                        'Elixir.Poison.Encoder.BitString',
                        'Elixir.Poison.Encoder.Date',
                        'Elixir.Poison.Encoder.DateTime',
                        'Elixir.Poison.Encoder.Float',
                        'Elixir.Poison.Encoder.HashSet',
                        'Elixir.Poison.Encoder.Integer',
                        'Elixir.Poison.Encoder.List',
                        'Elixir.Poison.Encoder.Map',
                        'Elixir.Poison.Encoder.MapSet',
                        'Elixir.Poison.Encoder.NaiveDateTime',
                        'Elixir.Poison.Encoder.Range',
                        'Elixir.Poison.Encoder.Stream',
                        'Elixir.Poison.Encoder.Time','Elixir.Poison.Parser',
                        'Elixir.Poison.Pretty','Elixir.Poison.SyntaxError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,maru,
                  [{description,
                       "REST-like API micro-framework for elixir inspired by grape."},
                   {vsn,"0.12.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.Maru','Elixir.Maru.Builder',
                        'Elixir.Maru.Builder.Before',
                        'Elixir.Maru.Builder.DSLs',
                        'Elixir.Maru.Builder.Description',
                        'Elixir.Maru.Builder.Endpoint',
                        'Elixir.Maru.Builder.Exceptions',
                        'Elixir.Maru.Builder.Extend',
                        'Elixir.Maru.Builder.Methods',
                        'Elixir.Maru.Builder.Namespaces',
                        'Elixir.Maru.Builder.Params',
                        'Elixir.Maru.Builder.Path',
                        'Elixir.Maru.Builder.Pipeline',
                        'Elixir.Maru.Builder.PlugRouter',
                        'Elixir.Maru.Builder.Route',
                        'Elixir.Maru.Builder.Versioning',
                        'Elixir.Maru.Builder.Versioning.AcceptHeader',
                        'Elixir.Maru.Builder.Versioning.AcceptVersionHeader',
                        'Elixir.Maru.Builder.Versioning.None',
                        'Elixir.Maru.Builder.Versioning.Parameter',
                        'Elixir.Maru.Builder.Versioning.Path',
                        'Elixir.Maru.Exceptions',
                        'Elixir.Maru.Exceptions.InvalidFormat',
                        'Elixir.Maru.Exceptions.MethodNotAllowed',
                        'Elixir.Maru.Exceptions.NotFound',
                        'Elixir.Maru.Exceptions.UndefinedType',
                        'Elixir.Maru.Exceptions.UndefinedValidator',
                        'Elixir.Maru.Exceptions.Validation',
                        'Elixir.Maru.Helper','Elixir.Maru.Helpers.Response',
                        'Elixir.Maru.Middleware',
                        'Elixir.Maru.Parameter.Phoenix',
                        'Elixir.Maru.Plugs.GetVersion',
                        'Elixir.Maru.Plugs.NotFound',
                        'Elixir.Maru.Plugs.PutVersion',
                        'Elixir.Maru.Plugs.SaveConn','Elixir.Maru.Router',
                        'Elixir.Maru.Runtime','Elixir.Maru.Struct.Dependent',
                        'Elixir.Maru.Struct.Dependent.Information',
                        'Elixir.Maru.Struct.Dependent.Runtime',
                        'Elixir.Maru.Struct.Endpoint',
                        'Elixir.Maru.Struct.Exception',
                        'Elixir.Maru.Struct.Parameter',
                        'Elixir.Maru.Struct.Parameter.Information',
                        'Elixir.Maru.Struct.Parameter.Runtime',
                        'Elixir.Maru.Struct.Plug',
                        'Elixir.Maru.Struct.Resource',
                        'Elixir.Maru.Struct.Route',
                        'Elixir.Maru.Struct.Validator',
                        'Elixir.Maru.Struct.Validator.Information',
                        'Elixir.Maru.Struct.Validator.Runtime',
                        'Elixir.Maru.Supervisor','Elixir.Maru.Test',
                        'Elixir.Maru.Type','Elixir.Maru.Types.Atom',
                        'Elixir.Maru.Types.Base64',
                        'Elixir.Maru.Types.Boolean',
                        'Elixir.Maru.Types.Charlist','Elixir.Maru.Types.File',
                        'Elixir.Maru.Types.Float','Elixir.Maru.Types.Integer',
                        'Elixir.Maru.Types.Json','Elixir.Maru.Types.List',
                        'Elixir.Maru.Types.Map','Elixir.Maru.Types.String',
                        'Elixir.Maru.Utils','Elixir.Maru.Validations',
                        'Elixir.Maru.Validations.AllOrNoneOf',
                        'Elixir.Maru.Validations.AllowBlank',
                        'Elixir.Maru.Validations.AtLeastOneOf',
                        'Elixir.Maru.Validations.ExactlyOneOf',
                        'Elixir.Maru.Validations.MutuallyExclusive',
                        'Elixir.Maru.Validations.Regexp',
                        'Elixir.Maru.Validations.Values',
                        'Elixir.Mix.Tasks.Maru.Routes']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,plug,cowboy,ranch,poison,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Maru',[]}}]}]}},
     {apply,
         {application,load,
             [{application,maru_swagger,
                  [{description,
                       "Add swagger compliant documentation to your maru API"},
                   {vsn,"0.8.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.MaruSwagger',
                        'Elixir.MaruSwagger.ConfigStruct',
                        'Elixir.MaruSwagger.DSL',
                        'Elixir.MaruSwagger.ParamsExtractor',
                        'Elixir.MaruSwagger.ParamsExtractor.NonGetBodyParamsGenerator',
                        'Elixir.MaruSwagger.ParamsExtractor.NonGetFormDataParamsGenerator',
                        'Elixir.MaruSwagger.Plug',
                        'Elixir.MaruSwagger.ResponseFormatter']},
                   {registered,[]},
                   {applications,[kernel,stdlib,maru,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,uuid,
                  [{description,"UUID generator and utilities for Elixir.\n"},
                   {vsn,"1.1.8"},
                   {id,[]},
                   {modules,['Elixir.UUID']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,exometer_report_graphite,
                  [{description,"Graphite reporter for Exometer."},
                   {vsn,"0.0.0+build.476.ref699ea55"},
                   {id,[]},
                   {modules,[exometer_report_graphite]},
                   {registered,[]},
                   {applications,[kernel,stdlib,exometer_core]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,tools,
                  [{description,"DEVTOOLS  CXC 138 16"},
                   {vsn,"2.11.2"},
                   {id,[]},
                   {modules,
                       [cover,eprof,fprof,instrument,lcnt,make,xref,xref_base,
                        xref_compiler,xref_parser,xref_reader,xref_scanner,
                        xref_utils]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,
                       [{file_util_search_methods,
                            [{[],[]},{"ebin","esrc"},{"ebin","src"}]}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,meck,
                  [{description,"A mocking framework for Erlang"},
                   {vsn,"0.8.9"},
                   {id,[]},
                   {modules,
                       [meck,meck_args_matcher,meck_code,meck_code_gen,
                        meck_cover,meck_expect,meck_history,meck_matcher,
                        meck_proc,meck_ret_spec,meck_util]},
                   {registered,[]},
                   {applications,[kernel,stdlib,tools]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,confex,
                  [{description,
                       "Helper module that provides a nice way to read configuration at runtime from environment variables or\nvia adapter-supported interface.\n"},
                   {vsn,"3.3.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Confex','Elixir.Confex.Adapter',
                        'Elixir.Confex.Adapters.FileFromSystemEnvironment',
                        'Elixir.Confex.Adapters.SystemEnvironment',
                        'Elixir.Confex.Resolver','Elixir.Confex.Type']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,runtime_tools,
                  [{description,"RUNTIME_TOOLS"},
                   {vsn,"1.12.5"},
                   {id,[]},
                   {modules,
                       [appmon_info,dbg,observer_backend,runtime_tools,
                        runtime_tools_sup,erts_alloc_config,ttb_autostart,
                        dyntrace,system_information,msacc]},
                   {registered,[runtime_tools_sup]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{runtime_tools,[]}}]}]}},
     {apply,
         {application,load,
             [{application,mongoose_push,
                  [{description,"mongoose_push"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.Certs.Dev',
                        'Elixir.Mix.Tasks.Compile.Asn1','Elixir.MongoosePush',
                        'Elixir.MongoosePush.API.V1',
                        'Elixir.MongoosePush.API.V2',
                        'Elixir.MongoosePush.Application',
                        'Elixir.MongoosePush.Metrics',
                        'Elixir.MongoosePush.Pools',
                        'Elixir.MongoosePush.Router',
                        'Elixir.MongoosePush.Service',
                        'Elixir.MongoosePush.Service.APNS',
                        'Elixir.MongoosePush.Service.APNS.Certificate',
                        'Elixir.MongoosePush.Service.FCM']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,mix_docker,distillery,pigeon,chatterbox,
                        elixometer,lager,maru_swagger,maru,uuid,httpoison,
                        poison,exometer_report_graphite,exometer_core,meck,
                        confex,runtime_tools,logger,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.MongoosePush.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,iex,
                  [{description,"iex"},
                   {vsn,"1.6.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.IEx','Elixir.IEx.App',
                        'Elixir.IEx.Autocomplete','Elixir.IEx.CLI',
                        'Elixir.IEx.Config','Elixir.IEx.Evaluator',
                        'Elixir.IEx.Helpers','Elixir.IEx.History',
                        'Elixir.IEx.Info','Elixir.IEx.Info.Any',
                        'Elixir.IEx.Info.Atom','Elixir.IEx.Info.BitString',
                        'Elixir.IEx.Info.Date','Elixir.IEx.Info.Float',
                        'Elixir.IEx.Info.Function','Elixir.IEx.Info.Integer',
                        'Elixir.IEx.Info.List','Elixir.IEx.Info.Map',
                        'Elixir.IEx.Info.NaiveDateTime','Elixir.IEx.Info.PID',
                        'Elixir.IEx.Info.Port','Elixir.IEx.Info.Reference',
                        'Elixir.IEx.Info.Time','Elixir.IEx.Info.Tuple',
                        'Elixir.IEx.Introspection','Elixir.IEx.Pry',
                        'Elixir.IEx.Remsh','Elixir.IEx.Server',
                        'Elixir.IEx.State']},
                   {registered,['Elixir.IEx.Supervisor','Elixir.IEx.Config']},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,
                       [{colors,[]},
                        {inspect,[{pretty,true}]},
                        {history_size,20},
                        {default_prompt,<<"%prefix(%counter)>">>},
                        {alive_prompt,<<"%prefix(%node)%counter>">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.IEx.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"3.1.2"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,si,si_sasl_supp,systools,
                        systools_make,systools_rc,systools_relup,
                        systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[{sasl_error_logger,tty},{errlog_type,all}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[mix_docker,permanent]}},
     {apply,{application,start_boot,[distillery,permanent]}},
     {apply,{application,start_boot,[poolboy,permanent]}},
     {apply,{application,start_boot,[hpack,permanent]}},
     {apply,{application,start_boot,[syntax_tools,permanent]}},
     {apply,{application,start_boot,[goldrush,permanent]}},
     {apply,{application,start_boot,[lager,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[chatterbox,permanent]}},
     {apply,{application,start_boot,[metrics,permanent]}},
     {apply,{application,start_boot,[ssl_verify_fun,permanent]}},
     {apply,{application,start_boot,[certifi,permanent]}},
     {apply,{application,start_boot,[mimerl,permanent]}},
     {apply,{application,start_boot,[unicode_util_compat,permanent]}},
     {apply,{application,start_boot,[idna,permanent]}},
     {apply,{application,start_boot,[hackney,permanent]}},
     {apply,{application,start_boot,[httpoison,permanent]}},
     {apply,{application,start_boot,[pigeon,permanent]}},
     {apply,{application,start_boot,[pobox,permanent]}},
     {apply,{application,start_boot,[bear,permanent]}},
     {apply,{application,start_boot,[folsom,permanent]}},
     {apply,{application,start_boot,[hut,permanent]}},
     {apply,{application,start_boot,[exometer_core,permanent]}},
     {apply,{application,start_boot,[elixometer,permanent]}},
     {apply,{application,start_boot,[mime,permanent]}},
     {apply,{application,start_boot,[plug,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[poison,permanent]}},
     {apply,{application,start_boot,[maru,permanent]}},
     {apply,{application,start_boot,[maru_swagger,permanent]}},
     {apply,{application,start_boot,[uuid,permanent]}},
     {apply,{application,start_boot,[exometer_report_graphite,permanent]}},
     {apply,{application,start_boot,[tools,permanent]}},
     {apply,{application,start_boot,[meck,permanent]}},
     {apply,{application,start_boot,[confex,permanent]}},
     {apply,{application,start_boot,[runtime_tools,permanent]}},
     {apply,{application,start_boot,[mongoose_push,permanent]}},
     {apply,{application,start_boot,[iex,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
